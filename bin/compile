#!/bin/bash
# usage: bin/compile <build-dir> <cache-dir> <env-dir>

set -eo pipefail

arrow() {
  sed -u 's/^/----->  /'
}

indent() {
  sed -u 's/^/       /'
}

cat_or() {
  echo $(cat $1 2>/dev/null || echo $2)
}

BASE_DIR=$PWD
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

NIM_DIR=$CACHE_DIR/Nim
NIM_BIN=$NIM_DIR/bin/nim

NIMBLE_DIR=$CACHE_DIR/.nimble
NIMBLE_BIN=$NIMBLE_DIR/bin/nimble


if [ ! -x $NIM_BIN ]; then
    nim_repo=$(cat_or $ENV_DIR/NIM_REPO "git://github.com/Araq/Nim.git")
    nim_branch=$(cat_or $ENV_DIR/NIM_BRANCH "master")
    nim_csources=$(car_or $ENV_DIR/NIM_CSOURCES "git://github.com/nim-lang/csources.git")

    echo "Installing Nim" | arrow

    git clone --depth 1 --branch $nim_branch $nim_repo $NIM_DIR
    cd $NIM_DIR
    git clone --depth 1 $nim_csources csources
    cd csources && sh build.sh
    cd ..
    bin/nim c koch
    ./koch boot -d:release

    echo "using #{nim_repo} @#{nim_branch}" | indent
fi

if [ ! -x $NIMBLE_BIN ]; then
    echo "Installing Nimble" | arrow
    nimble_repo=$(cat_or $ENV_DIR/NIMBLE_REPO "git://github.com/nim-lang/nimble.git")
    git clone --depth 1 $nimble_repo $CACHE_DIR/nimble
    cd $CACHE_DIR/nimble
    env HOME=$CACHE_DIR $NIM_BIN c -r src/nimble install
fi

cd $BUILD_DIR
export PATH="$NIM_DIR/bin:$NIMBLE_DIR/bin:$PATH"

echo "Building" | arrow
env HOME=$CACHE_DIR nimble build --accept
